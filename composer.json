{
    "name": "contentacms/contenta-jsonapi-project",
    "description": "Project template for Contenta CMS.",
    "type": "project",
    "license": "GPL-2.0-or-later",
    "authors": [
        {
            "name": "Mateu AguilÃ³ Bosch",
            "email": "mateu.aguilo.bosch@gmail.com"
        },
        {
            "name": "Daniel Wehner",
            "email": "dawehner@users.noreply.github.com"
        }
    ],
    "repositories": [
        {
            "type": "composer",
            "url": "https://packages.drupal.org/8"
        },
        {
            "type": "composer",
            "url": "https://asset-packagist.org"
        }
    ],
    "require": {
        "php": ">=8.0",
        "composer/installers": "^1.9",
        "contentacms/contenta_jsonapi": "dev-8.x-3.x",
        "drupal/admin_toolbar": "^3.1",
        "drupal/backup_migrate": "^5.0",
        "drupal/config_perms": "^2.0",
        "drupal/content_sync": "^3.0@beta",
        "drupal/core-composer-scaffold": "^9.4",
        "drupal/db_maintenance": "^2.0",
        "drupal/devel": "^4.1",
        "drupal/file_entity": "^2.0@beta",
        "drupal/maxlength": "^2.0",
        "drupal/search_kint": "^2.0@alpha",
        "drush/drush": "^10.6",
        "kint-php/kint": "^3.3",
        "oomphinc/composer-installers-extender": "^2.0",
        "vlucas/phpdotenv": "^5.3"
    },
    "require-dev": {
        "drupal/core-dev": "^9.4",
        "symplify/vendor-patches": "^11.0"
    },
    "conflict": {
        "drupal/drupal": "*"
    },
    "autoload": {
        "files": [
            "load.environment.php"
        ]
    },
    "scripts": {
        "install:with-mysql": "scripts/install-mysql.sh",
        "install:with-sqlite": "scripts/install-sqlite.sh",
        "pre-install-cmd": "Drupal\\Composer\\Composer::ensureComposerVersion",
        "pre-update-cmd": "Drupal\\Composer\\Composer::ensureComposerVersion",
        "pre-autoload-dump": "Drupal\\Core\\Composer\\Composer::preAutoloadDump",
        "drupal-phpunit-upgrade-check": "Drupal\\Core\\Composer\\Composer::upgradePHPUnit",
        "drupal-phpunit-upgrade": [
            "@composer update phpunit/phpunit --with-dependencies --no-progress",
            "@composer require phpspec/prophecy-phpunit:^2 --no-progress --no-suggest"
        ],
        "post-update-cmd": [
            "Drupal\\Composer\\Composer::generateMetapackages"
        ],
        "phpcs": "phpcs --standard=core/phpcs.xml.dist --runtime-set installed_paths $($COMPOSER_BINARY config vendor-dir)/drupal/coder/coder_sniffer --",
        "phpcbf": "phpcbf --standard=core/phpcs.xml.dist --runtime-set installed_paths $($COMPOSER_BINARY config vendor-dir)/drupal/coder/coder_sniffer --"
    },
    "extra": {
        "composer-exit-on-patch-failure": true,
        "patchLevel": {
            "drupal/core": "-p2"
        },
        "patches": {
            "contentacms/contenta_jsonapi": {
              "core.extension.yml":"patches/core-extension.patch"
            }
        },
        "installer-types": [
            "bower-asset",
            "npm-asset"
        ],
        "installer-paths": {
            "web/core": [
                "type:drupal-core"
            ],
            "web/libraries/{$name}": [
                "type:drupal-library",
                "type:bower-asset",
                "type:npm-asset"
            ],
            "web/modules/contrib/{$name}": [
                "type:drupal-module"
            ],
            "web/profiles/contrib/{$name}": [
                "type:drupal-profile"
            ],
            "web/themes/contrib/{$name}": [
                "type:drupal-theme"
            ],
            "drush/contrib/{$name}": [
                "type:drupal-drush"
            ],
            "web/modules/custom/{$name}/": [
                "type:drupal-custom-module"
            ]
        },
        "enable-patching": true,
        "drupal-scaffold": {
            "locations": {
                "web-root": "web/"
            },
            "file-mapping": {
                "[web-root]/README.md": false,
                "[web-root]/.htaccess": false,
                "[web-root]/.robots.txt": false
            }
        }
    },
    "config": {
        "sort-packages": true,
        "allow-plugins": {
            "composer/installers": true,
            "dealerdirect/phpcodesniffer-composer-installer": true,
            "cweagans/composer-patches": true,
            "drupal/core-project-message": true,
            "drupal/core-vendor-hardening": true,
            "drupal/core-composer-scaffold": true,
            "oomphinc/composer-installers-extender": true
        }
    },
    "minimum-stability": "dev",
    "prefer-stable": true
}
